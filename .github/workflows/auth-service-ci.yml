name: Auth Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/auth-service/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/auth-service/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: openpg
          POSTGRES_PASSWORD: openpgpwd
          POSTGRES_DB: authdb_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/auth-service/package-lock.json
    
    - name: Install dependencies
      working-directory: backend/auth-service
      run: npm ci
    
    - name: Generate Prisma Client
      working-directory: backend/auth-service
      run: npx prisma generate
    
    - name: Build TypeScript
      working-directory: backend/auth-service
      run: npm run build
    
  build-and-push-image:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend/auth-service
        file: ./backend/auth-service/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sapientia-auth-service:latest,${{ secrets.DOCKER_USERNAME }}/sapientia-auth-service:${{ github.sha }}
